{{- if .Values.preview.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.global.namespace }}
  name: redis-service-{{ .Values.global.namespace }}
spec:
  selector:
    app.kubernetes.io/name: redis-{{ .Values.global.namespace }}
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-pv-redis-{{ .Values.global.namespace }}
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: {{ .Values.efsId }}
    volumeAttributes:
      path: /{{ .Values.global.namespace }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: {{ .Values.global.namespace }}
  name: redis-efs-claim-{{ .Values.global.namespace }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.global.namespace }}
  name: redis-deployment-{{ .Values.global.namespace }}
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-{{ .Values.global.namespace }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-{{ .Values.global.namespace }}
    spec:
      volumes:
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: redis-efs-claim-{{ .Values.global.namespace }}
      containers:
      - name: redis
        image: redis:6.2
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: persistent-storage
          mountPath: /data
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "2"
            memory: "4Gi"
{{- end }}